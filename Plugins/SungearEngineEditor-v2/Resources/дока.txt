1) всегда у всех контейнеров стоит display: flex
2) чтобы создавать свои шаблоны используем тег 'template' с атрибутом 'id' для названия шаблона
    2.1) для примера как создавать свои шаблоны можно посмотреть файл templates/window/window.xml
3) любой тег, который означает элемент, принимает атрибут 'class'
4) доступные теги по-умолчанию:
    4.1) xml - корень элементов
    4.2) empty-window - абсолютно пустое окно. принимает атрибуты:
        4.2.1) title - название окна
        4.2.2) isDockingTarget - является ли окно таргетом для докинга. принимает значения: "true" или "false"
    4.3) div - пустой контейнер
    4.4) separator - разделитель. принимает атрибуты:
        4.4.1) axis - ось разделителя. принимает значения:
            4.4.1.1) x - разделение по оси X
            4.4.1.2) y - разделение по оси y
    4.5) include - включение файла. принимает атрибуты:
        4.5.1) type - тип включаемого файла. принимает значения:
            4.5.1.1) template - включаемый файл является файлом шаблонов
            4.5.1.2) stylesheet - включаемый файл является файлом стилей
        4.5.2) path - путь до файла
    4.6) template - объявление шаблона. принимает атрибуты:
        4.6.1) name - название шаблона
    4.7) attribute - объявление атрибута, который может принять шаблон. принимает атрибуты:
        4.7.1) name - название атрибута
    4.8) acceptedValue - объявление значения, которое может принять конкретный атрибут шаблона. принимает атрибуты:
        4.8.1) value - принимаемое значение. специальные обозначения:
            4.8.1.1) _any_ - принимает любое значение
    4.9) elements - объявление элементов, которые будут подставлены вместо шаблона. не принимает атрибутов
5) есть возможность использования интерполированных путей и строк. пример:
    <include type="template" path="${enginePath}/Resources/interface/templates/window.xml"

